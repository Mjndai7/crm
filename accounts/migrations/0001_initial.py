# Generated by Django 4.1.7 on 2023-04-07 14:46

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('username', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateField(default=datetime.date.today)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='employeeDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('phone_no', models.CharField(blank=True, max_length=10, unique=True)),
                ('email', models.EmailField(max_length=30, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('department', models.CharField(choices=[('Finance', 'Finance'), ('HR', 'HR'), ('Customer Care', 'Customer Care'), ('Sales', 'Sales'), ('Marketing', 'Marketing'), ('IT', 'IT'), ('Accounting', 'Accounting'), ('Executive', 'Executive'), ('Cleaning', 'Cleaning'), ('Logistics', 'Logistics')], max_length=20)),
                ('job_title', models.CharField(choices=[('CEO', 'CEO'), ('CFO', 'CFO'), ('CTO', 'CTO'), ('HR Manager', 'HR Manager'), ('Sr Developer', 'Sr Developer'), ('Jnr Developer', 'Jnr Developer'), ('Accountant', 'Accountant'), ('Consultant', 'Consultant'), ('Sales Executive', 'Sales Executive'), ('DevOps Engineer', 'DevOps Engineer'), ('Managing Partner', 'Managing Partner'), ('Head of Logistics', 'Head of Logistics')], max_length=20)),
                ('salary', models.IntegerField()),
                ('date_employed', models.DateField(default=datetime.date.today)),
                ('is_manager', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='employeeProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='default.png', upload_to='media')),
                ('phone_no', models.CharField(max_length=10, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=30)),
                ('department', models.CharField(blank=True, max_length=30)),
                ('job_title', models.CharField(blank=True, max_length=30)),
                ('date_employed', models.DateField(default=datetime.date.today)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
